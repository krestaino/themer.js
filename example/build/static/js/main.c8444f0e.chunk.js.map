{"version":3,"sources":["index.js"],"names":["App","state","active","markdown","themer","android","dark","light","custom","themes","_this2","this","fetch","README","then","res","text","setState","theme","_this3","_this$state","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_themer_js__WEBPACK_IMPORTED_MODULE_8___default","className","PACKAGE","version","href","getEmoji","description","map","key","onClick","setActiveTheme","react_markdown__WEBPACK_IMPORTED_MODULE_7___default","source","escapeHtml","author","name","email","aria-hidden","focusable","role","xmlns","viewBox","fill","d","Component","ReactDOM","render","document","getElementById"],"mappings":"oWAYMA,6MACJC,MAAQ,CACNC,OAAQ,OACRC,SAAU,KACVC,OAAQ,CACNC,QAAS,CAAEC,KAAM,UAAWC,MAAO,UAAWC,OAAQ,WACtDC,OAAQ,CAAC,OAAQ,SAAU,QAAS,OAAQ,+FAI5B,IAAAC,EAAAC,KAClBC,MAAMC,KACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAAI,OAAIN,EAAKO,SAAS,CAAEd,SAAUa,yCAI1C,OAAQL,KAAKV,MAAMC,QACjB,IAAK,OACH,MAAO,eACT,IAAK,SACH,MAAO,eACT,IAAK,QACH,MAAO,eACT,IAAK,OACH,MAAO,eACT,IAAK,SACH,MAAO,eACT,QACE,MAAO,uDAIEgB,GACbP,KAAKM,SAAS,CAAEf,OAAQgB,qCAGjB,IAAAC,EAAAR,KAAAS,EAC8BT,KAAKV,MAAlCC,EADDkB,EACClB,OAAQC,EADTiB,EACSjB,SAAUC,EADnBgB,EACmBhB,OACpBiB,EAAQ,CAAEnB,SAAQG,QAASD,EAAOC,QAASI,OAAQL,EAAOK,QAEhE,OACEa,EAAAC,EAAAC,cAACC,EAAAF,EAAWF,EACVC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,gBAAQG,EAAQC,UAE5BN,EAAAC,EAAAC,cAAA,KAAGK,KAAK,0CAAR,kCAGAP,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASf,KAAKmB,YAAmB,IAChDH,EAAQI,cAGbT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACZtB,EAAOK,OAAOuB,IAAI,SAAAd,GAAK,OACtBI,EAAAC,EAAAC,cAAA,UACEE,UAAWR,IAAUhB,EAAS,SAAW,GACzC+B,IAAKf,EACLgB,QAAS,kBAAMf,EAAKgB,eAAejB,KAElCA,OAKTI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAec,OAAQlC,EAAUmC,YAAY,KAE/ChB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,YAAOG,EAAQY,OAAOC,MACtBlB,EAAAC,EAAAC,cAAA,YAAOG,EAAQY,OAAOE,OACtBnB,EAAAC,EAAAC,cAAA,OACEkB,cAAY,OACZC,UAAU,QACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,eAERxB,EAAAC,EAAAC,cAAA,QACEuB,KAAK,eACLC,EAAE,gOArFFC,aAgGlBC,IAASC,OAAO7B,EAAAC,EAAAC,cAACxB,EAAD,MAASoD,SAASC,eAAe","file":"static/js/main.c8444f0e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport Themer from \"react-themer.js\";\n\nimport \"./index.css\";\nimport \"./dark.css\";\nimport \"./custom.css\";\n\nimport README from \"../node_modules/react-themer.js/README.md\";\nimport PACKAGE from \"../node_modules/react-themer.js/package.json\";\n\nclass App extends Component {\n  state = {\n    active: \"auto\",\n    markdown: null,\n    themer: {\n      android: { dark: \"#242835\", light: \"#f1f1f1\", custom: \"#b95c2f\" },\n      themes: [\"auto\", \"system\", \"light\", \"dark\", \"custom\"]\n    }\n  };\n\n  componentDidMount() {\n    fetch(README)\n      .then(res => res.text())\n      .then(text => this.setState({ markdown: text }));\n  }\n\n  getEmoji() {\n    switch (this.state.active) {\n      case \"auto\":\n        return \"ðŸŒ—\";\n      case \"system\":\n        return \"ðŸ’»\";\n      case \"light\":\n        return \"ðŸŒž\";\n      case \"dark\":\n        return \"ðŸŒ’\";\n      case \"custom\":\n        return \"ðŸŽ¨\";\n      default:\n        return \"ðŸŒ—\";\n    }\n  }\n\n  setActiveTheme(theme) {\n    this.setState({ active: theme });\n  }\n\n  render() {\n    const { active, markdown, themer } = this.state;\n    const props = { active, android: themer.android, themes: themer.themes };\n\n    return (\n      <Themer {...props}>\n        <main>\n          <section>\n            <header>\n              <div className=\"meta container\">\n                <h1>\n                  Themer.js <span>v{PACKAGE.version}</span>\n                </h1>\n                <a href=\"https://github.com/krestaino/themer.js\">\n                  github.com/krestaino/themer.js\n                </a>\n                <p>\n                  <span className=\"emoji\">{this.getEmoji()}</span>{\" \"}\n                  {PACKAGE.description}\n                </p>\n              </div>\n              <div className=\"buttons container\">\n                {themer.themes.map(theme => (\n                  <button\n                    className={theme === active ? \"active\" : \"\"}\n                    key={theme}\n                    onClick={() => this.setActiveTheme(theme)}\n                  >\n                    {theme}\n                  </button>\n                ))}\n              </div>\n            </header>\n            <div className=\"readme container\">\n              <ReactMarkdown source={markdown} escapeHtml={false} />\n            </div>\n            <footer>\n              <span>{PACKAGE.author.name}</span>\n              <span>{PACKAGE.author.email}</span>\n              <svg\n                aria-hidden=\"true\"\n                focusable=\"false\"\n                role=\"img\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 512 512\"\n              >\n                <path\n                  fill=\"currentColor\"\n                  d=\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"\n                />\n              </svg>\n            </footer>\n          </section>\n        </main>\n      </Themer>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}