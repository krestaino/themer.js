{"version":3,"sources":["components/Header/index.js","components/Readme/index.js","components/Footer/index.js","index.js"],"names":["Header","react_default","a","createElement","id","className","PACKAGE","version","href","this","props","icon","description","children","Component","Readme","state","markdown","_this2","fetch","README","then","res","text","setState","react_markdown_default","source","escapeHtml","Footer","author","name","email","aria-hidden","focusable","role","xmlns","viewBox","fill","d","App","active","themes","dark","light","custom","_this$state","Button","theme","undefined","onClick","dist_default","Header_Header","Readme_Readme","Footer_Footer","rootElement","document","getElementById","hasChildNodes","hydrate","src_App","render"],"mappings":"0PAIqBA,0LAEjB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,GAAG,UACTH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,gBAAQG,EAAQC,UAE5BN,EAAAC,EAAAC,cAAA,KAAGK,KAAK,0CAAR,kCAGAP,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASI,KAAKC,MAAMC,MACnCL,EAAQM,cAGbX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBI,KAAKC,MAAMG,kBAhBnBC,gDCCfC,qNACnBC,MAAQ,CACNC,SAAU,yFAGQ,IAAAC,EAAAT,KAClBU,MAAMC,KACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAAI,OAAIL,EAAKM,SAAS,CAAEP,SAAUM,uCAI1C,OACEtB,EAAAC,EAAAC,cAAA,WAASC,GAAG,SAASC,UAAU,aAC7BJ,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAewB,OAAQjB,KAAKO,MAAMC,SAAUU,YAAY,YAd5Bb,cCDfc,2LAEjB,OACE3B,EAAAC,EAAAC,cAAA,UAAQC,GAAG,UACTH,EAAAC,EAAAC,cAAA,YAAOG,EAAQuB,OAAOC,MACtB7B,EAAAC,EAAAC,cAAA,YAAOG,EAAQuB,OAAOE,OACtB9B,EAAAC,EAAAC,cAAA,OACE6B,cAAY,OACZC,UAAU,QACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,eAERnC,EAAAC,EAAAC,cAAA,QACEkC,KAAK,eACLC,EAAE,6NAfsBxB,uFCUfyB,6MACnBvB,MAAQ,CACNwB,OAAQ,OACR7B,KAAM,eACN8B,OAAQ,CAAEC,OAAMC,QAAOC,mFAGhB,IAAA1B,EAAAT,KAAAoC,EAC0BpC,KAAKO,MAA9BwB,EADDK,EACCL,OAAQ7B,EADTkC,EACSlC,KAAM8B,EADfI,EACeJ,OAEhBK,EAAS,SAACC,EAAOjB,EAAMnB,GAC3B,OACEV,EAAAC,EAAAC,cAAA,UACEE,UAAW0C,IAAUP,EAAS,cAAWQ,EACzCC,QAAS,kBAAM/B,EAAKM,SAAS,CAAEgB,OAAQO,EAAOpC,WAE7CmB,IAKP,OACE7B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQsC,OAAQA,EAAQC,OAAQA,IAChCxC,EAAAC,EAAAC,cAACgD,EAAD,CAAQxC,KAAMA,GACXmC,EAAO,OAAQ,OAAQ,gBACvBA,EAAO,SAAU,SAAU,gBAC3BA,EAAOH,EAAO,QAAS,gBACvBG,EAAOJ,EAAM,OAAQ,gBACrBI,EAAOF,EAAQ,SAAU,iBAE5B3C,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,cAhCyBvC,aAsC3BwC,EAAcC,SAASC,eAAe,QAExCF,EAAYG,gBACdC,kBAAQzD,EAAAC,EAAAC,cAACwD,EAAD,MAASL,GAEjBM,iBAAO3D,EAAAC,EAAAC,cAACwD,EAAD,MAASL","file":"static/js/main.83bce67f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PACKAGE from \"react-themer.js/package.json\";\nimport \"./styles.scss\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header id=\"header\">\n        <div className=\"container\">\n          <h1>\n            Themer.js <span>v{PACKAGE.version}</span>\n          </h1>\n          <a href=\"https://github.com/krestaino/themer.js\">\n            github.com/krestaino/themer.js\n          </a>\n          <p>\n            <span className=\"emoji\">{this.props.icon}</span>\n            {PACKAGE.description}\n          </p>\n        </div>\n        <div className=\"buttons container\">{this.props.children}</div>\n      </header>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport README from \"react-themer.js/README.md\";\nimport \"./styles.scss\";\n\nexport default class Readme extends Component {\n  state = {\n    markdown: null\n  };\n\n  componentDidMount() {\n    fetch(README)\n      .then(res => res.text())\n      .then(text => this.setState({ markdown: text }));\n  }\n\n  render() {\n    return (\n      <section id=\"readme\" className=\"container\">\n        <ReactMarkdown source={this.state.markdown} escapeHtml={false} />\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PACKAGE from \"react-themer.js/package.json\";\nimport \"./styles.scss\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer id=\"footer\">\n        <span>{PACKAGE.author.name}</span>\n        <span>{PACKAGE.author.email}</span>\n        <svg\n          aria-hidden=\"true\"\n          focusable=\"false\"\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path\n            fill=\"currentColor\"\n            d=\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"\n          />\n        </svg>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport Themer from \"react-themer.js\";\n\nimport Header from \"./components/Header\";\nimport Readme from \"./components/Readme\";\nimport Footer from \"./components/Footer\";\n\nimport light from \"./themes/light.json\";\nimport dark from \"./themes/dark.json\";\nimport custom from \"./themes/custom.json\";\n\nimport \"./index.scss\";\n\nexport default class App extends Component {\n  state = {\n    active: \"auto\",\n    icon: \"ðŸŒ—\",\n    themes: { dark, light, custom }\n  };\n\n  render() {\n    const { active, icon, themes } = this.state;\n\n    const Button = (theme, name, icon) => {\n      return (\n        <button\n          className={theme === active ? \"active\" : undefined}\n          onClick={() => this.setState({ active: theme, icon })}\n        >\n          {name}\n        </button>\n      );\n    };\n\n    return (\n      <main>\n        <Themer active={active} themes={themes} />\n        <Header icon={icon}>\n          {Button(\"auto\", \"Auto\", \"ðŸŒ—\")}\n          {Button(\"system\", \"System\", \"ðŸ’»\")}\n          {Button(light, \"Light\", \"ðŸŒž\")}\n          {Button(dark, \"Dark\", \"ðŸŒ’\")}\n          {Button(custom, \"Custom\", \"ðŸŽ¨\")}\n        </Header>\n        <Readme />\n        <Footer />\n      </main>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n"],"sourceRoot":""}